一.命名规约
    1. 【强制】类名要表示类的功能，类名使用 UpperCamelCase 风格（首字母都大写），必须遵从驼峰形式。
        正例: MessageUtil，UserController
    2. 【强制】抽象类命名使用 Abstract 或 Base 开头 ； 异常类命名使用 Exception 结尾 ； 测试类命名以它要测试的类的名称开始，以 Test 结尾。
    3. 对于 Service 和 DAO 类，基于 SOA 的理念，暴露出来的服务一定是接口，内部的实现类用 Impl 的后缀与接口区别。
        正例:CacheServiceImpl 实现 CacheService 接口。
    4. 【强制】所有的包名都采用小写。包名要使用有意义的名字，包名不要用省略文字，子包名可使用重复名字
         Eg:bean,controller,service
    5. 【强制】不定义与构造函数同名的方法，方法名只在断开处使用大写文字
  		说明：定义方法名时，如为一个单词话，请都使用小写文字，由多单词构成时，请从第二单词开始单词的第一字母大写，这是Java的一般规则。
    6. 【强制】取得方法名使用“get+属性名”，设定方法名使用“set+属性名”
    7. 【强制】方法名的参数名与类属性名相同时，使用this修饰
    8. 【强制】变量名要体现作用，小范围的变量名可用省略的名字
  		说明：应该使用可反应变量作用的名字来定义变量，但在小范围内变量的识别比较容易，所以也可以使用类型名的简称等省略的名字，小范围是指行数少，并且没有嵌套
  	9.用适当的权限宣言：
  		说明：请掌握private,public等修饰字的意义，对类/方法/变量/订了等用适当的权限进行宣言
二.格式规约
    1.【强制】方法的格式：
            修饰符  返回值类型   方法名（参数类型 参数名，参数类型 参数名，.....）		{
                方法体语句；
                Return  返回值；
            }
      		Eg: public static int add(int x, int y, int z) {
                    return x + y + z;
                }
    2.【强制】if/for/while/switch/do 等保留字与左右括号之间都必须加空格。
            Eg: if （）{}
    3. for语句因为具有循环的性质，应该使用花括号明确的标出语句块的范围
        for (int i = 0; i < aa.length; i++) {
            System.out.println(aa[i]);
        }
    4. 【强制】代码块缩进 4 个空格，如果使用 tab 缩进，请设置成 1 个 tab 为 4 个空格。
    正例: public static void main(String args[]) {
            // 缩进 4 个空格
            String say = "hello";
            // 运算符的左右必须有一个空格
            int flag = 0;
            // 关键词 if 与括号之间必须有一个空格，括号内 f 与左括号，1 与右括号不需要空格
            if (flag == 0) {
                System.out.println(say);
            }
             // 左大括号前加空格且不换行；左大括号后换行
            if (flag == 1) {
                 System.out.println("world");
                // 右大括号前换行，右大括号后有 else，不用换行
            } else {
                 System.out.println("ok");
                 // 右大括号做为结束，必须换行
            }
    }
三.注释规约
    1．【强制】块注释用于提供文件，方法，数据结构和算法的描述。块注释可以在每个文件的开头和每种方法之前使用。它们也可以在其他地方使用，例如在方法内。函数或方法中的块注释应缩进至与其描述的代码相同的级别。块注释之前应有一个空白行，以使其与其余代码区分开。
        Eg:
        / *
        *这是一个块注释。
        * /
    2. 【强制】单行注释, 简短的注释可以显示在单行上，缩进到随后的代码级别。如果不能用单行写注释，则应遵循块注释格式
        Eg:
        如果（条件）{
            / *处理条件。* /
            ...
        }
    3. 【强制】尾随注释,简短的注释可以与它们描述的代码显示在同一行上，但应移至足够远的位置，以将其与语句分开。如果在代码段中出现多个简短注释，则应将所有注释缩进相同的选项卡设置。
        Eg: 如果（a == 2）{
            返回TRUE; /* 特例 */
        }其他{
            返回isPrime（a）; / *仅适用于奇数* /
        }
    4. 【推荐】与其“半吊子”英文来注释，不如用中文注释把问题说清楚。专有名词、关键字，保 持英文原文即可。
        反例：“TCP 连接超时”解释成“传输控制协议连接超时”，理解反而费脑筋。
    5. 【推荐】所有的方法都应该在开头有一个注释， 其中列出作者名方法名、方法的功能、参数概述。
        Eg:
        /**
        *@author 张三
        *@method 方法名 方法功能
        *@Param 参数名 参数作用
        **/
四.文件规约
    1.前后端controller分开，规定前端controller写到com\ssm\xingxingsystem\controller\frontend包下，后端controller写到com\ssm\xingxingsystem\controller\backend包下
    2.前后台页面分开，规定前台jsp页面写到src\main\webapp\jsp\frontend文件夹下，后台jsp页面写到src\main\webapp\jsp\backend文件夹下，如需要自己建文件夹，请在自己负责的前端或后端文件夹下创建新文件夹使用
    3.bean、service等前后端controller都可调用